name: Socket Deployment Template

on:
  workflow_call:
    inputs:
      prefix:
        description: The app prefix
        required: true
        type: string
      env_name:
        description: The environment name
        required: true
        type: string
      stage_name:
        description: The API Gateway stage name
        required: true
        type: string
      wss_url:
        description: The WebSockets URL
        required: true
        type: string
      deployment_bucket:
        description: The S3 bucket used for deployments
        required: true
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
          
      - name: Set environment variables
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region us-east-1

      - name: Build the socket service
        working-directory: server/socket
        run: npm run build

      - name: Deploy the socket service
        working-directory: server/socket
        run: |
          npm run prepare-dist
          aws cloudformation package --template template.yml --s3-bucket ${{ inputs.deployment_bucket }} --s3-prefix ${{ inputs.env_name }}/socket --output-template template-export.yml
          CERT_ARN=$(aws cloudformation describe-stacks --stack-name ${{ inputs.prefix }}-domain --query "Stacks[0].Outputs[?OutputKey=='CertificateARN'].OutputValue" --output text)
          HOSTED_ZONE_ID=$(aws cloudformation describe-stacks --stack-name ${{ inputs.prefix }}-domain --query "Stacks[0].Outputs[?OutputKey=='HostedZoneId'].OutputValue" --output text)
          PARAMS="EnvName=${{ inputs.env_name }} DomainName=${{ inputs.wss_url }} CertArn=$CERT_ARN HostedZoneId=$HOSTED_ZONE_ID StageName=${{ inputs.stage_name }}"
          aws cloudformation deploy --template-file template-export.yml --stack-name ${{ inputs.prefix }}-socket-${{ inputs.env_name }} --parameter-overrides $PARAMS --capabilities CAPABILITY_NAMED_IAM

      - name: Deploy the API Gateway
        working-directory: server/socket
        run: |
          API_ID=$(aws cloudformation describe-stacks --stack-name ${{ inputs.prefix }}-socket-${{ inputs.env_name }} --query "Stacks[0].Outputs[?OutputKey=='WebsocketApi'].OutputValue" --output text)
          aws apigatewayv2 create-deployment --api-id $API_ID --stage-name ${{ inputs.stage_name }}
